{
  "Print to console": {
    "prefix": "cl",
    "body": [
      "console.log($1);",
    ],
    "description": "Log output to console this is a example snippet"
  },
  
  "Create new component": {
    "description": "Snippet for quick create an example component in this project",
    "prefix": "nc",
    "body": [
      "interface ${1:Hello}ComponentProps {",
      "  className: string",
      "}",
      "",
      "const ${1:Hello}Component = ({ className }: ${1:Hello}ComponentProps) => {",
      "  const hello = 'hello';",
      "",
      "  return (",
      "    <div className={className}>{hello}</div>",
      "  );",
      "};",
      "",
      "export default ${1:Hello}Component;",
      "",
    ],
  },
  "Create React Context ": {
    "prefix": "nrc",
    "body": [
      "import React from 'react';",
      "",
      "type ${1:Hello}ContextProps = {",
      "  title: string",
      "  setTitle: (title: string) => void",
      "}",
      "",
      "export const ${1:Hello}Context = React.createContext<${1:Hello}ContextProps>({",
      "  title: '',",
      "  setTitle: () => {}",
      "});",
      "",
      "export const ${1:Hello}Provider : React.FC<React.ReactNode> = ({children} : any) => {",
      "  const [title, setTitle] = React.useState<string>('');",
      "",
      "  return <${1:Hello}Context.Provider value={{ title, setTitle }}>",
      "    {children}",
      "  </${1:Hello}Context.Provider>",
      "}",
      "",
      "export const use${1:Hello} = () => React.useContext(${1:Hello}Context);"
    ],
    "description": "Create Context Example"
  }
}